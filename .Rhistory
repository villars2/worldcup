write.csv(groupGames,paste(getwd(),"/groupPull.csv",sep=""))
}
if (save==3) {
groupGames<-read.csv(paste(getwd(),"/",filename,".csv", sep=""))
}
return(groupGames)
}
buildgroups(3)
groupGames<-buildgroups(3)
#getsummary("A")
getsummary("G")
possible(c(1,1))
getsummary("A")
groupGames<-buildgroups(1)
groupGames<-buildgroups(3)
getsummary("G")
groupGames<-buildgroups(1)
groupGames
groupGames
getsummary("D")
groupGames<-buildgroups(1)
groupGames
getsummary("C")
possible(c(1,1))
possible(c(1,1))[,1]
names(possible(c(1,1)))[1]
names(group)
df<-possible(c(1,1))
df
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
names(df)<-c("first","second",g1,g2)
head(df)
melt(df,id=c("gColombia-gJapan","gGreece-gIvory Coast"))
df
df.l<-melt(df,id=c("score1","score2"))
names(df)<-c("first","second","score1","score2")
df.l<-melt(df,id=c("score1","score2"))
head(df.l)
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<-melt(df,id=c("score1","score2"))
names(df)<-c(g1,g2,"rank","country")
g<-ggplot(df,aes(x=df[,1],y=df[,2],colour=value))+
geom_point()+
facet_grid(variable~.)
}
plotpossible(possible(c(1,1)))
library(ggplot2)
plotpossible(possible(c(1,1)))
### Plot outcomes given scores:
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<-melt(df,id=c("score1","score2"))
names(df)<-c(g1,g2,"rank","country")
g<-ggplot(df,aes(x=df[,1],y=df[,2],colour=value))+
geom_point()+
facet_grid(variable~.)
return(g)
}
plotpossible(possible(c(1,1)))
df
df.l<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
head(df.l)
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df,aes(x=df[,1],y=df[,2],colour=country))+
geom_point()+
facet_grid(rank~.)
return(g)
}
plotpossible(possible(c(1,1)))
head(df.l)
g<-ggplot(df,aes(x=df[,1],y=df[,2],colour=country))+
geom_point()
g
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=df[,1],y=df[,2],colour=country))+
geom_point()+
facet_grid(rank~.)
return(g)
}
plotpossible(possible(c(1,1)))
head(df.l)
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=df.l[,1],y=df.l[,2],colour=country))+
geom_point()+
facet_grid(rank~.)
return(g)
}
plotpossible(possible(c(1,1)))
getsummary("C")
plotpossible(possible(c(-1,-1)))
rm(df)
rm(df.l)
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=df.l[,1],y=df.l[,2],colour=country))+
geom_point()+
facet_grid(rank~.)
return(g)
}
plotpossible(possible(c(-1,-1)))
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df,aes(x=df[,1],y=df.l[,2],colour=country))+
geom_point()+
facet_grid(rank~.)
return(g)
}
plotpossible(possible(c(-1,-1)))
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df<-melt(df,id=c("score1","score2"))
names(df)<-c(g1,g2,"rank","country")
g<-ggplot(df,aes(x=df[,1],y=df.l[,2],colour=country))+
geom_point()+
facet_grid(rank~.)
return(g)
}
plotpossible(possible(c(-1,-1)))
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=df.l[,1],y=df.l[,2],colour=country))+
geom_point()+
facet_grid(rank~.)
return(g)
}
plotpossible(possible(c(-1,-1)))
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=df.l[,1],y=df.l[,2],colour=country))+
geom_point()+
facet_grid(rank~.)+
xlab(g1)+
ylab(g2)
return(g)
}
plotpossible(possible(c(-1,-1)))
getsummary("C")
plotpossible(possible(c(-1,0)))
plotpossible(possible(c(-1,1)))
plotpossible(possible(c(-1,0)))
plotpossible(possible(c(0,0)))
?jitter
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point()+
facet_grid(rank~.)+
xlab(g1)+
ylab(g2)
return(g)
}
plotpossible(possible(c(0,0)))
plotpossible(possible(c(-1,-1)))
getsummary("G")
head(simul)
plotpossible(simul)
?ggsave
getwd()
ggsave(filename=paste(getwd(),"/groupGplot.png",sep=""),plot=plotpossible(simul))
ggsave(filename=paste(getwd(),"/groupGplot.png",sep=""),plot=plotpossible(simul))
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point(size=1)+
facet_grid(rank~.)+
xlab(g1)+
ylab(g2)
return(g)
}
plotpossible(simul)
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point(size=2)+
facet_grid(rank~.)+
xlab(g1)+
ylab(g2)
return(g)
}
plotpossible(simul)
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point(size=1)+
facet_grid(rank~.)+
xlab(g1)+
ylab(g2)
return(g)
}
ggsave(filename=paste(getwd(),"/groupGplot.png",sep=""),plot=plotpossible(simul))
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point(size=1,alpha=0.6)+
facet_grid(rank~.)+
xlab(g1)+
ylab(g2)
return(g)
}
ggsave(filename=paste(getwd(),"/groupGplot.png",sep=""),plot=plotpossible(simul))
rm(list=ls())
library(reshape)
library(reshape2)
library(plyr)
library(rjson)
library(ggplot2)
# groupA<-data.frame(game=c(1,1,2,2,3,3,4,4,5,5,6,6),team=c(1,2,3,4,1,3,2,4,1,4,2,3))
# groupA$goals<-c(rpois(8,1),rep(NA,4))
### Set directory and load in scores
#cd<-"C:/Users/Sergio/Documents/GitHub/worldcup"
#cd<-"C:/Users/sv2307/Documents/GitHub/worldcup"
##### Put functions here
### Pulling data from world cup API.
## Argument=1 is to pull file from API, 2 is to get file and save, 3 is to
## read file from filename (only body of name, no .csv)
buildgroups <- function (save=1,filename="groupPull") {
if (save==1 || save==2) {
json_file<-"http://worldcup.sfg.io/matches"
json_data<-fromJSON(file=json_file)
pullGame <- function(g_data) {
g<-subset(subset(do.call("rbind.fill",lapply(g_data,as.data.frame)),country!="<NA>",select=c(country,code,goals)))
g$g_id<-g_data[[1]]
if (g_data[[4]]!="completed") {
g$goals<-c(NA,NA)
}
return(g)
}
groupGames<-do.call("rbind.fill",lapply(lapply(json_data[1:48],pullGame),as.data.frame))
names(groupGames)<-c("country","fifa_code","goals","game")
teams_file<-"http://worldcup.sfg.io/teams"
teams_data<-fromJSON(file=teams_file)
teams_data<-lapply(teams_data, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
teamsMaster<-as.data.frame(do.call("rbind", teams_data))
teamsMaster$group<-LETTERS[teamsMaster$group_id]
teamsMaster<-subset(teamsMaster,select=c(country,fifa_code,group))
groupGames<-merge(groupGames,teamsMaster)
groupGames<-groupGames[order(groupGames$group,groupGames$game,groupGames$country),]
}
if (save==2) {
write.csv(groupGames,paste(getwd(),"/groupPull.csv",sep=""))
}
if (save==3) {
groupGames<-read.csv(paste(getwd(),"/",filename,".csv", sep=""))
}
return(groupGames)
}
### Function to get top 2 teams (in order) in each group given scores
gothru<-function(grp) {
grp$teamingame<-rep(c(1,2),6)
grp.wide<-dcast(grp,game~teamingame,value.var="goals")
names(grp.wide)<-c("game","g1","g2")
grp.wide$gd1<-grp.wide$g1-grp.wide$g2
grp.wide$gd2<-grp.wide$g2-grp.wide$g1
grp.wide<-subset(grp.wide,select=c(game,gd1,gd2))
grp.gd<-melt(grp.wide,id=c("game"))
grp.gd$variable<-substring(grp.gd$variable,3,4)
names(grp.gd)<-c("game","teamingame","gd")
grp.all<-merge(grp,grp.gd)
grp.all$pts<-sign(grp.all$gd)+1+as.numeric(grp.all$gd>0)
rankings<-ddply(grp.all,"country",summarize,points=sum(pts,na.rm=TRUE),gd=sum(gd,na.rm=TRUE),gf=sum(goals,na.rm=TRUE))
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,decreasing=TRUE),]
thru<-rankings$country[1:2]
return(thru)
}
### Function to replace NA scores by simulated scores, and get top 2 teams
simulate <- function (scores) {
grp<-group
grp$goals[is.na(grp$goals)]<-scores
return(gothru(grp))
}
### Compute qualifying teams given all possible scores
Mode <- function(vec) {
all<-levels(vec)
all[which.max(tabulate(match(vec,all)))]
}
only<-function(vec) {
return(min(vec==Mode(vec)))
}
### Builds summary of outcomes given scores
getsummary <- function (gr) {
#group<<-subset(read.csv(paste(cd,"groups.csv", sep="/")),group==gr)
group<<-subset(groupGames,group==gr)
### Load in team names by group/team id
#master<<-subset(read.csv(paste(cd,"master.csv",sep="/")),group==gr,select=c(team,teamname))
# gothru(groupA)
# To get result for 2 outcomes: sapply(list(groupA,groupA2),gothru)
### Simulate given all scores with between 0 and 5 goals.
#group<-group
simulation<-expand.grid(g1=c(0:5),g2=c(0:5),g3=c(0:5),g4=c(0:5))
names(simulation)<-as.character(paste("g",subset(group,is.na(goals))$country,sep=""))
results<-apply(simulation,1,simulate)
simulation$first<-as.factor(results[1,])
simulation$second<-as.factor(results[2,])
#masterfirst<-master
#names(masterfirst)<-c("first","firstname")
#mastersecond<-master
#names(mastersecond)<-c("second","secondname")
simulation$score1<-sign(simulation[,1]-simulation[,2])
simulation$score2<-sign(simulation[,3]-simulation[,4])
#simulation<-merge(merge(simulation,masterfirst),mastersecond)
simul<<-simulation
### Summary, aggregated by result (W/D/L) in each remaining game
## firstmd and secondmd are the team that comes first or second most often,
## and firstonly and secondonly are indicators for whether that team
## is always in first or second place (could not be because of goal difference, etc)
summary<-ddply(simulation,c("score1","score2"),summarize,firstmd=Mode(first),firstonly=only(first),secondmd=Mode(second),secondonly=only(second))
### Making it look nice...
summary$score1[summary$score1==-1]<-"L"
summary$score1[summary$score1==0]<-"T"
summary$score1[summary$score1==1]<-"W"
summary$score2[summary$score2==-1]<-"L"
summary$score2[summary$score2==0]<-"T"
summary$score2[summary$score2==1]<-"W"
remaininggames<-subset(group,is.na(goals))
summary$score1<-paste(remaininggames$country[1],
summary$score1,
remaininggames$country[2],
sep=" ")
summary$score2<-paste(remaininggames$country[3],
summary$score2,
remaininggames$country[4],
sep=" ")
#masterfirst<-master
#names(masterfirst)<-c("firstmd","firstmdname")
#mastersecond<-master
#names(mastersecond)<-c("secondmd","secondmdname")
#summary$group<-gr
#summary<-merge(merge(summary,masterfirst),mastersecond)
#summary$res1<-paste()
return(summary)
}
### Possible outcomes given a certain score (for different goal combinations)
possible <- function (outcomes) {
possoutcomes<-subset(simul,score1==outcomes[1] & score2==outcomes[2],select=-c(score1,score2))
possoutcomes<-possoutcomes[order(possoutcomes$first,possoutcomes$second),]
return(possoutcomes)
}
### Plot outcomes given scores:
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point(size=1,alpha=0.6)+
facet_grid(rank~.)+
xlab(g1)+
ylab(g2)
return(g)
}
groupGames<-buildgroups(1)
#getsummary("A")
getsummary("G")
#possible(c(1,1))
ggsave(filename=paste(getwd(),"/groupGplot.png",sep=""),plot=plotpossible(simul))
plotpossible(simul)+theme_bw()
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point(size=2,alpha=0.7)+
facet_grid(rank~.)+
xlab(g1)+
ylab(g2)+
theme_bw()
return(g)
}
ggsave(filename=paste(getwd(),"/groupGplot.png",sep=""),plot=plotpossible(simul))
subset(groupGames,country=="France")$group
getsummary("E")
plotpossible(simul)
getsummary("C")
plotpossible(simul)
groupGames
x<-matrix(rep(0:5,4),ncol=4)
x
as.data.frame(x)
grid.expand(as.data.frame(x))
expand.grid(as.data.frame(x))
size(expand.grid(as.data.frame(x)))
class(expand.grid(as.data.frame(x)))
x<-expand.grid(matrix(rep(0:5,6),ncol=6))
x
x<-expand.grid(as.data.frame(matrix(rep(0:5,6),ncol=6)))
head(x)
nrows(x)
nrow(x)
x<-expand.grid(as.data.frame(matrix(rep(0:5,8),ncol=8)))
nrow(x)
rm(x)
bla<-buildgroups(1)
head(bla)
mean(bla$goals,na.rm=TRUE)
mean(bla$goals,na.rm=TRUE)*2
sum(bla$goals,na.rm=TRUE)
mean(subset(bla,game<=32)$goals,na.rm=TRUE)*2
sum(subset(bla,game<=32)$goals,na.rm=TRUE)
sum(subset(bla,game>32)$goals,na.rm=TRUE)
bla
mean(subset(bla,game<=32)$goals,na.rm=TRUE)*2
sum(bla$goals,na.rm=TRUE)
mean(bla$goals,na.rm=TRUE)*2
sum(bla$goals,na.rm=TRUE)
109/2.868421
38*3
mean(subset(bla,game!=39 & game!=40)$goals,na.rm=TRUE)*2
groupGames<-buildgroups(1)
groupGames
