tied<-group$country[group$dups]
tied
group<-data.frame(country=as.factor(c("Brazil","Mexico","Croatia","Cameroon")), points=c(1,2,3,3), gd=c(3,2,2,2),gf=c(1,0,4,4))
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
group$dup<-duplicated(subset(group,select=-c(country)),fromLast=TRUE)
check<-as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))[1,])
group$dups<-apply(as.matrix(subset(group,selec=c(points,gd,gf))),1,function(x) {identical(as.numeric(x),check)})
tied<-group$country[group$dups]
games<-grp
games$tie<-as.factor(games$country) %in% tied
games
agg<-aggregate(games$tie,games$game,min)
agg<-aggregate(games$tie,list(games$game),min)
agg
names(agg)<-c("game","tiedgames")
merge(games,agg)
group<-data.frame(country=as.factor(c("Brazil","Mexico","Croatia","Cameroon")), points=c(1,2,3,3), gd=c(3,2,2,2),gf=c(1,0,4,4))
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
group$dup<-duplicated(subset(group,select=-c(country)),fromLast=TRUE)
check<-as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))[1,])
group$dups<-apply(as.matrix(subset(group,selec=c(points,gd,gf))),1,function(x) {identical(as.numeric(x),check)})
tied<-group$country[group$dups]
games<-grp
games$tie<-as.factor(games$country) %in% tied
agg<-aggregate(games,)
group<-data.frame(country=as.factor(c("Brazil","Mexico","Croatia","Cameroon")), points=c(1,2,3,3), gd=c(3,2,2,2),gf=c(1,0,4,4))
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
group$dup<-duplicated(subset(group,select=-c(country)),fromLast=TRUE)
check<-as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))[1,])
tied<-group$country[group$dups]
games<-grp
group$dups<-apply(as.matrix(subset(group,selec=c(points,gd,gf))),1,function(x) {identical(as.numeric(x),check)})
games$tie<-as.factor(games$country) %in% tied
#agg<-aggregate(games,)
#group$dups<-(subset(group,select=c(points,gd,gf))==as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))))
agg<-aggregate(games$tie,list(games$game),min)
names(agg)<-c("game","tiedgames")
games<-merge(games,agg)
games
group<-data.frame(country=as.factor(c("Brazil","Mexico","Croatia","Cameroon")), points=c(1,2,3,3), gd=c(3,2,2,2),gf=c(1,0,4,4))
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
group$dup<-duplicated(subset(group,select=-c(country)),fromLast=TRUE)
group
check<-as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))[1,])
group$dups<-apply(as.matrix(subset(group,selec=c(points,gd,gf))),1,function(x) {identical(as.numeric(x),check)})
group
tied<-group$country[group$dups]
group
grp
games<-grp
games$tie<-as.factor(games$country) %in% tied
games
agg<-aggregate(games$tie,list(games$game),min)
agg
names(agg)<-c("game","tiedgames")
agg
games
merge(games,agg)
games<-merge(games,agg)
games
tiedgroup<-subset(games,tiedgames==1,select=c(game,country,fifa_code,goals,group))
tiedgroup
length(tiedgroup)
length(tiedgroup,2)
length(tiedgroup[1,])
length(tiedgroup[,1])
grp
tiedgroup$teamingame<-rep(c(1,2),length(tiedgroup[,1])/2)
tiedgroup
grp<-tiedgroup
grp$teamingame<-rep(c(1,2),length(tiedgroup[,1])/2)
grp.wide<-dcast(grp,game~teamingame,value.var="goals")
names(grp.wide)<-c("game","g1","g2")
grp.wide$gd1<-grp.wide$g1-grp.wide$g2
grp.wide$gd2<-grp.wide$g2-grp.wide$g1
grp.wide<-subset(grp.wide,select=c(game,gd1,gd2))
grp.gd<-melt(grp.wide,id=c("game"))
grp.gd$variable<-substring(grp.gd$variable,3,4)
names(grp.gd)<-c("game","teamingame","gd")
grp.all<-merge(grp,grp.gd)
grp.all$pts<-sign(grp.all$gd)+1+as.numeric(grp.all$gd>0)
rankings<-ddply(grp.all,"country",summarize,points=sum(pts,na.rm=TRUE),gd=sum(gd,na.rm=TRUE),gf=sum(goals,na.rm=TRUE))
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,decreasing=TRUE),]
rankings
grp
grp<-subset(groupGames,group=="A")
buildrankings(grp)
buildrankings <- function (grp) {
grp$teamingame<-rep(c(1,2),length(tiedgroup[,1])/2)
grp.wide<-dcast(grp,game~teamingame,value.var="goals")
names(grp.wide)<-c("game","g1","g2")
grp.wide$gd1<-grp.wide$g1-grp.wide$g2
grp.wide$gd2<-grp.wide$g2-grp.wide$g1
grp.wide<-subset(grp.wide,select=c(game,gd1,gd2))
grp.gd<-melt(grp.wide,id=c("game"))
grp.gd$variable<-substring(grp.gd$variable,3,4)
names(grp.gd)<-c("game","teamingame","gd")
grp.all<-merge(grp,grp.gd)
grp.all$pts<-sign(grp.all$gd)+1+as.numeric(grp.all$gd>0)
rankings<-ddply(grp.all,"country",summarize,points=sum(pts,na.rm=TRUE),gd=sum(gd,na.rm=TRUE),gf=sum(goals,na.rm=TRUE))
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,decreasing=TRUE),]
return(rankings)
}
buildrankings(grp)
grp
group<-grp
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
rankings
rankings<-buildrankings(grp)
rankings
group<-rankings
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
group$dup<-duplicated(subset(group,select=-c(country)),fromLast=TRUE)
check<-as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))[1,])
group$dups<-apply(as.matrix(subset(group,selec=c(points,gd,gf))),1,function(x) {identical(as.numeric(x),check)})
tied<-group$country[group$dups]
games<-grp
games$tie<-as.factor(games$country) %in% tied
games
agg<-aggregate(games$tie,list(games$game),min)
names(agg)<-c("game","tiedgames")
games<-merge(games,agg)
tiedgroup<-subset(games,tiedgames==1,select=c(game,country,fifa_code,goals,group))
tiedgroup
getrankings(tiedgroup)
buildrankings(tiedgroup)
groupgrp
grp
group<-grp
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
group$dup<-duplicated(subset(group,select=-c(country)),fromLast=TRUE)
check<-as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))[1,])
group$dups<-apply(as.matrix(subset(group,selec=c(points,gd,gf))),1,function(x) {identical(as.numeric(x),check)})
tied<-group$country[group$dups]
rnk<-buildrankings(grp)
grp
buildrankings(grp)
rm(grp)
grp<-subset(groupGames,group=="A")
grp$teamingame<-rep(c(1,2),length(tiedgroup[,1])/2)
buildrankings <- function (grp) {
grp$teamingame<-rep(c(1,2),length(grp[,1])/2)
grp.wide<-dcast(grp,game~teamingame,value.var="goals")
names(grp.wide)<-c("game","g1","g2")
grp.wide$gd1<-grp.wide$g1-grp.wide$g2
grp.wide$gd2<-grp.wide$g2-grp.wide$g1
grp.wide<-subset(grp.wide,select=c(game,gd1,gd2))
grp.gd<-melt(grp.wide,id=c("game"))
grp.gd$variable<-substring(grp.gd$variable,3,4)
names(grp.gd)<-c("game","teamingame","gd")
grp.all<-merge(grp,grp.gd)
grp.all$pts<-sign(grp.all$gd)+1+as.numeric(grp.all$gd>0)
rankings<-ddply(grp.all,"country",summarize,points=sum(pts,na.rm=TRUE),gd=sum(gd,na.rm=TRUE),gf=sum(goals,na.rm=TRUE))
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,decreasing=TRUE),]
return(rankings)
}
grp
rnk<-buildrankings(grp)
rnk
group<-rnk
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
group$dup<-duplicated(subset(group,select=-c(country)),fromLast=TRUE)
check<-as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))[1,])
group$dups<-apply(as.matrix(subset(group,selec=c(points,gd,gf))),1,function(x) {identical(as.numeric(x),check)})
tied<-group$country[group$dups]
games<-grp
games$tie<-as.factor(games$country) %in% tied
#agg<-aggregate(games,)
#group$dups<-(subset(group,select=c(points,gd,gf))==as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))))
agg<-aggregate(games$tie,list(games$game),min)
names(agg)<-c("game","tiedgames")
games<-merge(games,agg)
tiedgroup<-subset(games,tiedgames==1,select=c(game,country,fifa_code,goals,group))
tiedgroup
class(tiedgroup)
tiedgroup$game
tiedgroup$game==NULL
tiedgroup[1,]
tiedgroup[,1]
length(tiedgroup)
length(tiedgroup[,1])
group
rnk
tiebreak<-subset(rnk,select=country)
tiebreak$brk<-rep(1,4)
tiebreak
tiedgroup
length(tiedgroup[,1])
tiedgroup
group<-data.frame(country=as.factor(c("Brazil","Mexico","Croatia","Cameroon")), points=c(1,2,3,3), gd=c(3,2,2,2),gf=c(1,0,4,4))
group<-rnk
group<-data.frame(country=as.factor(c("Brazil","Mexico","Croatia","Cameroon")), points=c(1,2,3,3), gd=c(3,2,2,2),gf=c(1,0,4,4))
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
group$dup<-duplicated(subset(group,select=-c(country)),fromLast=TRUE)
check<-as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))[1,])
group$dups<-apply(as.matrix(subset(group,selec=c(points,gd,gf))),1,function(x) {identical(as.numeric(x),check)})
tied<-group$country[group$dups]
games<-grp
games$tie<-as.factor(games$country) %in% tied
#agg<-aggregate(games,)
#group$dups<-(subset(group,select=c(points,gd,gf))==as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))))
agg<-aggregate(games$tie,list(games$game),min)
names(agg)<-c("game","tiedgames")
games<-merge(games,agg)
tiedgroup<-subset(games,tiedgames==1,select=c(game,country,fifa_code,goals,group))
tiedgroup$teamingame<-rep(c(1,2),length(tiedgroup[,1])/2)
tiedgroup
tiebreak<-subset(rnk,select=country)
tiebreak$brk<-rep(1,4)
if (length(tiedgroup[,1])>0) {
tiebreak<-buildrankings(tiedgroup)
}
tiebreak
tiebreak$brk<-(1:length(tiedgroup[,1])
)
tiebreak
buildtiebreak <- function(rnk) {
group<-rnk
group<-group[order(group$points,group$gd,group$gf,decreasing=TRUE),]
group$dup<-duplicated(subset(group,select=-c(country)),fromLast=TRUE)
check<-as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))[1,])
group$dups<-apply(as.matrix(subset(group,selec=c(points,gd,gf))),1,function(x) {identical(as.numeric(x),check)})
tied<-group$country[group$dups]
games<-grp
games$tie<-as.factor(games$country) %in% tied
#agg<-aggregate(games,)
#group$dups<-(subset(group,select=c(points,gd,gf))==as.numeric(subset(group,dup==TRUE,select=c(points,gd,gf))))
agg<-aggregate(games$tie,list(games$game),min)
names(agg)<-c("game","tiedgames")
games<-merge(games,agg)
tiedgroup<-subset(games,tiedgames==1,select=c(game,country,fifa_code,goals,group))
tiedgroup$teamingame<-rep(c(1,2),length(tiedgroup[,1])/2)
tiebreak<-subset(rnk,select=country)
tiebreak$brk<-rep(1,4)
if (length(tiedgroup[,1])>0) {
tiebreak<-buildrankings(tiedgroup)
tiebreak$brk<-(1:length(tiedgroup[,1]))
tiebreak<-subset(tiebreak,select=c(country,brk))
}
return(tiebreak)
}
group
grp
buildtiebreak(group)
group<-data.frame(country=as.factor(c("Brazil","Mexico","Croatia","Cameroon")), points=c(1,2,3,3), gd=c(3,2,2,2),gf=c(1,0,4,4))
buildtiebreak(group)
buildrankings <- function (grp) {
grp$teamingame<-rep(c(1,2),length(grp[,1])/2)
grp.wide<-dcast(grp,game~teamingame,value.var="goals")
names(grp.wide)<-c("game","g1","g2")
grp.wide$gd1<-grp.wide$g1-grp.wide$g2
grp.wide$gd2<-grp.wide$g2-grp.wide$g1
grp.wide<-subset(grp.wide,select=c(game,gd1,gd2))
grp.gd<-melt(grp.wide,id=c("game"))
grp.gd$variable<-substring(grp.gd$variable,3,4)
names(grp.gd)<-c("game","teamingame","gd")
grp.all<-merge(grp,grp.gd)
grp.all$pts<-sign(grp.all$gd)+1+as.numeric(grp.all$gd>0)
rankings<-ddply(grp.all,"country",summarize,points=sum(pts,na.rm=TRUE),gd=sum(gd,na.rm=TRUE),gf=sum(goals,na.rm=TRUE))
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,decreasing=TRUE),]
return(rankings)
}
### Function to get top 2 teams (in order) in each group given scores
gothru<-function(grp) {
#   grp$teamingame<-rep(c(1,2),6)
#   grp.wide<-dcast(grp,game~teamingame,value.var="goals")
#   names(grp.wide)<-c("game","g1","g2")
#   grp.wide$gd1<-grp.wide$g1-grp.wide$g2
#   grp.wide$gd2<-grp.wide$g2-grp.wide$g1
#   grp.wide<-subset(grp.wide,select=c(game,gd1,gd2))
#   grp.gd<-melt(grp.wide,id=c("game"))
#   grp.gd$variable<-substring(grp.gd$variable,3,4)
#   names(grp.gd)<-c("game","teamingame","gd")
#
#   grp.all<-merge(grp,grp.gd)
#   grp.all$pts<-sign(grp.all$gd)+1+as.numeric(grp.all$gd>0)
#
#   rankings<-ddply(grp.all,"country",summarize,points=sum(pts,na.rm=TRUE),gd=sum(gd,na.rm=TRUE),gf=sum(goals,na.rm=TRUE))
#   rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,decreasing=TRUE),]
rankings<-buildrankings(grp)
rankings<-merge(rankings,buildtiebreak(rankings))
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,rankings$brk,decreasing=TRUE)]
thru<-rankings$country[1:2]
return(thru)
}
group<-data.frame(country=as.factor(c("Brazil","Mexico","Croatia","Cameroon")), points=c(1,2,3,3), gd=c(3,2,2,2),gf=c(1,0,4,4))
group
bla<-subset(groupGames,group=="A")
bla
gothru(bla)
buildrankings(bla)
rankings<-merge(rankings,buildtiebreak(rankings))
rankings
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,rankings$brk,decreasing=TRUE)]
rankings
rankings<-buildrankings(grp)
rankings<-merge(rankings,buildtiebreak(rankings))
rankings
order(rankings$points)
order(rankings$points,decreasing=TRUE)
order(rankings$points,rankings$gfdecreasing=TRUE)
order(rankings$points,rankings$gf,decreasing=TRUE)
order(rankings$points,rankings$gd,rankings$gf,rankings$brk,decreasing=TRUE)
rankings[order(rankings$points,rankings$gd,rankings$gf,rankings$brk,decreasing=TRUE)]
rankings
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,rankings$brk,decreasing=TRUE),]
rankings
### Function to build group rankings
buildrankings <- function (grp) {
grp$teamingame<-rep(c(1,2),length(grp[,1])/2)
grp.wide<-dcast(grp,game~teamingame,value.var="goals")
names(grp.wide)<-c("game","g1","g2")
grp.wide$gd1<-grp.wide$g1-grp.wide$g2
grp.wide$gd2<-grp.wide$g2-grp.wide$g1
grp.wide<-subset(grp.wide,select=c(game,gd1,gd2))
grp.gd<-melt(grp.wide,id=c("game"))
grp.gd$variable<-substring(grp.gd$variable,3,4)
names(grp.gd)<-c("game","teamingame","gd")
grp.all<-merge(grp,grp.gd)
grp.all$pts<-sign(grp.all$gd)+1+as.numeric(grp.all$gd>0)
rankings<-ddply(grp.all,"country",summarize,points=sum(pts,na.rm=TRUE),gd=sum(gd,na.rm=TRUE),gf=sum(goals,na.rm=TRUE))
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,decreasing=TRUE),]
return(rankings)
}
### Function to get top 2 teams (in order) in each group given scores
gothru<-function(grp) {
#   grp$teamingame<-rep(c(1,2),6)
#   grp.wide<-dcast(grp,game~teamingame,value.var="goals")
#   names(grp.wide)<-c("game","g1","g2")
#   grp.wide$gd1<-grp.wide$g1-grp.wide$g2
#   grp.wide$gd2<-grp.wide$g2-grp.wide$g1
#   grp.wide<-subset(grp.wide,select=c(game,gd1,gd2))
#   grp.gd<-melt(grp.wide,id=c("game"))
#   grp.gd$variable<-substring(grp.gd$variable,3,4)
#   names(grp.gd)<-c("game","teamingame","gd")
#
#   grp.all<-merge(grp,grp.gd)
#   grp.all$pts<-sign(grp.all$gd)+1+as.numeric(grp.all$gd>0)
#
#   rankings<-ddply(grp.all,"country",summarize,points=sum(pts,na.rm=TRUE),gd=sum(gd,na.rm=TRUE),gf=sum(goals,na.rm=TRUE))
#   rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,decreasing=TRUE),]
rankings<-buildrankings(grp)
rankings<-merge(rankings,buildtiebreak(rankings))
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,rankings$brk,decreasing=TRUE),]
thru<-rankings$country[1:2]
return(thru)
}
group
bla
gothru(bla)
gothru(subset(groupGames,group=="B"))
gothru(subset(groupGames,group=="C"))
gothru(subset(groupGames,group=="D"))
gothru(subset(groupGames,group=="E"))
group<-data.frame(country=c("A","B","A","C","B","C"),game=c(1,1,2,2,3,3),goals=c(3,0,0,3,2,0))
group
buildrankings(group)
group<-data.frame(country=c("A","B","A","C","B","C"),game=c(1,1,2,2,3,3),goals=c(2,0,0,3,2,0))
buildrankings(group)
builrankings(subset(groupGames,group=="A"))
buildrankings(subset(groupGames,group=="A"))
bla<-subset(groupGames,group=="A")
bla
bla[3,11:12]
bla$goals[11:12]
bla$goals[11:12]<-c(2,6)
bla
buildrankings(bla)
gothru(bla)
bla
bla$goals<-c(1,0,0,0,0,1,1,0,1,0,1,0)
buildrankings(bla)
bla
gothru(bla)
gothru<-function(grp) {
#   grp$teamingame<-rep(c(1,2),6)
#   grp.wide<-dcast(grp,game~teamingame,value.var="goals")
#   names(grp.wide)<-c("game","g1","g2")
#   grp.wide$gd1<-grp.wide$g1-grp.wide$g2
#   grp.wide$gd2<-grp.wide$g2-grp.wide$g1
#   grp.wide<-subset(grp.wide,select=c(game,gd1,gd2))
#   grp.gd<-melt(grp.wide,id=c("game"))
#   grp.gd$variable<-substring(grp.gd$variable,3,4)
#   names(grp.gd)<-c("game","teamingame","gd")
#
#   grp.all<-merge(grp,grp.gd)
#   grp.all$pts<-sign(grp.all$gd)+1+as.numeric(grp.all$gd>0)
#
#   rankings<-ddply(grp.all,"country",summarize,points=sum(pts,na.rm=TRUE),gd=sum(gd,na.rm=TRUE),gf=sum(goals,na.rm=TRUE))
#   rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,decreasing=TRUE),]
rankings<-buildrankings(grp)
rankings<-merge(rankings,buildtiebreak(rankings))
rankings<-rankings[order(rankings$points,rankings$gd,rankings$gf,-rankings$brk,decreasing=TRUE),]
thru<-rankings$country[1:2]
return(thru)
}
gothru(bla)
gothru(bla)
gothru(bla)
buildrankings(bla)
rnk<-buildrankings(bla)
rnk
rnk[1,1]
rnk[1,2]
rnk[1,2:4]
identical(rnk[1,2:4])
identical(rnk[1,2:4],rnk[2,2:4])
rnk[1,2:4]
rnk[2,2:4]
identical(as.numeric(rnk[1,2:4]),as.numeric(rnk[2,2:4]))
as.factor(c(1,2,3))
rnk
paste(countr$c(points,gd,gf))
paste(country$c(points,gd,gf))
paste(rnk$c(points,gd,gf))
paste(rnk$points,rnk$gdp,rnk$gf)
getsummary("E")
plotpossible(simul)
ggsave(filename=paste(getwd(),"/groupEplot.png",sep=""),plot=plotpossible(simul))
?ggsave
ggsave(filename=paste(getwd(),"/groupEplot.png",sep=""),plot=plotpossible(simul),width=10,height=15)
?facet_grid
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point(size=2,alpha=0.7)+
facet_grid(.~rank~)+
xlab(g1)+
ylab(g2)+
theme_bw()
return(g)
}
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point(size=2,alpha=0.7)+
facet_grid(.~rank~)+
xlab(g1)+
ylab(g2)+
theme_bw()
return(g)
}
plotpossible <- function(df) {
df$score1<-df[,1]-df[,2]
df$score2<-df[,3]-df[,4]
g1<-paste(names(df)[1],names(df)[2],sep="-")
g2<-paste(names(df)[3],names(df)[4],sep="-")
df<-subset(df,select=c(first,second,score1,score2))
df.l<<-melt(df,id=c("score1","score2"))
names(df.l)<-c(g1,g2,"rank","country")
g<-ggplot(df.l,aes(x=jitter(df.l[,1],amount=0.1),y=jitter(df.l[,2],amount=0.1),colour=country))+
geom_point(size=2,alpha=0.7)+
facet_grid(.~rank)+
xlab(g1)+
ylab(g2)+
theme_bw()
return(g)
}
plotpossible(simul)
ggsave(filename=paste(getwd(),"/groupEplot.png",sep=""),plot=plotpossible(simul),width=10,height=15)
ggsave(filename=paste(getwd(),"/groupEplot.png",sep=""),plot=plotpossible(simul),width=15,height=10)
ggsave(filename=paste(getwd(),"/groupEplot.png",sep=""),plot=plotpossible(simul),width=10,height=7)
rnk
rnk$rnk<-rank(rnk$points, ties.method="max")
rnk$rnk<-rank(rnk$points, ties.method="min")
rnk
rnk$rnk<-rank(rnk$points,rnk$gd, ties.method="min")
rnk$rnk<-rank(rnk$points,rnk$gd,rnk$gf, ties.method="min")
?rank
rank(rnk)
as.factor(1,4,6)
as.factor(c(1,4,6))
as.factor(c("1","4","6"))
as.factor(c("1","4","6"))[2]
as.factor(c("1","4","6"))[3]
bla
grp
rnk
paste(as.character(rnk$points),as.character(rnk$gd))
paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk))
as.levels(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)))
as.factor(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)))
as.factor(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)))[1]
factor(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)))[1]
factor(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)))
factor(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)))[1]
factor("braxil","croatia")
factor(c("braxil","croatia"))
factor(c("braxil","croatia"))[1]
as,numeric(factor(c("braxil","croatia"))[1])
as.numeric(factor(c("braxil","croatia"))[1])
as.numeric(factor(c("braxil","croatia"))[2])
as.numeric(factor(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk))))
max(as.numeric(factor(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)))))
rank(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)))
rank(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)),ties.method="min")
?rank
rnk
rank(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)),ties.method="max")
5-rank(paste(as.character(rnk$points),as.character(rnk$gd),as.character(rnk$gf),as.character(rnk$rnk)),ties.method="max")
